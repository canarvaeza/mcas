
# ------ most basic instances creator.

prefix : <http://localhost:8890/pruebaMCAS#>
select distinct ?p ?new ?new2

where {
?s mContext:isInvolvedIn ?p.
  {
    select ?p ?class ?new ?new2 where{
      ?p a ?class.
      FILTER (?class = alzheimer:Talk || ?class = alzheimer:Sit).
      BIND (?p as ?new).
      BIND (URI(CONCAT(?new, ?p)) as ?new2).
      #BIND (STRAFTER(str(?p), str(:)) as ?new)
      #BIND (URI(CONCAT(?new, ?p)) as ?new2)
    }
  }
}


## --- Working example mine ---

prefix : <http://localhost:8890/mcas/activity#act/>

#construct{
# ?new a alzheimer:Speak.
# ?user mContext:isInvolvedIn ?new.
#}

INSERT INTO <http://localhost:8890/mcas/activity#> {
 ?new a alzheimer:Speak.
 #?user mContext:isInvolvedIn ?new.
 ?new <http://www.semanticweb.org/ontologies/mcontext#hasActor> ?user.
 #?new <http://purl.org/m-context/ontologies/mContext#hasSubActivity> ?a.
}


from <http://localhost:8890/mcas/person#>
from <http://localhost:8890/mcas/activity#>
from <http://localhost:8890/mcas/multimedia#>
from <http://localhost:8890/mcas/sensor#>

where 
{
  ?a a ?class.

  FILTER (?class = <http://purl.org/m-context/ontologies/domains/alzheimer#Sit> || 
      ?class = <http://purl.org/m-context/ontologies/domains/alzheimer#Eat>).
  BIND (URI(CONCAT(str(:), 'jasidijaid2332')) as ?new).
  FILTER(NOT EXISTS {?new a [] .})
  {
    select distinct ?a
    where {
      BIND(<http://localhost:8890/mcas/person#per/00001> as ?user).
      ?user rdf:type <http://purl.org/m-context/ontologies/person#PersonMCAS>;
      mContext:isInvolvedIn ?a.
      FILTER( ?s in (<http://localhost:8890/mcas/person#per/00001>))
      #OPTIONAL {

      #}
    }
  }
}


## --- Working example from others ---


prefix : <http://purl.org/m-context/ontologies/mContext#>
prefix activity: <http://localhost:8890/mcas/activity#act/>
prefix time: <http://purl.org/m-context/ontologies/time#>

#select *


construct{
#INSERT INTO <http://localhost:8890/mcas/activity#> {
 ?new a alzheimer:HavingAMeal;
   :hasSubActivity ?act1;
   :hasSubActivity ?act2;
   :hasActor ?user.

 ?act1 :isSubActivity ?new.
 ?act2 :isSubActivity ?new.
}

from <http://localhost:8890/mcas/person#>
from <http://localhost:8890/mcas/activity#>

where {
#?s ?o ?p.
 BIND ("2017-06-06"^^xsd:dateTime as ?day).

 ?act1 a <http://purl.org/m-context/ontologies/domains/alzheimer#Sit>;
  time:hasBeginningTime ?b1;
  time:hasEndingTime ?e1.

 BIND (xsd:dateTime(?b1) as ?bt1).
 BIND (xsd:dateTime(?e1) as ?et1).
 FILTER(month(?bt1) = month(?day))
  
 ?act2 a <http://purl.org/m-context/ontologies/domains/alzheimer#Eat>;
  time:hasBeginningTime ?b2;
  time:hasEndingTime ?e2.

  BIND (xsd:dateTime(?b2) as ?bt2).
  BIND (xsd:dateTime(?e2) as ?et2).
  
  FILTER (?bt1 < ?bt2 && ?et1 > ?et2).
  
 optional {
  ?act2 :hasActor ?o.
 }

BIND (URI(CONCAT(
str(activity:), 
STRAFTER(str(?act1), str(activity:))
,"_", 
STRAFTER(str(?act2), str(activity:))
)) as ?new).
#FILTER(NOT EXISTS {?new a [] .})  

}






## ---- MULTILPLE WRITES example others--- 

prefix : <http://purl.org/m-context/ontologies/mContext#>
prefix activity: <http://localhost:8890/mcas/activity#act/>
prefix time: <http://purl.org/m-context/ontologies/time#>

#select *

#construct{
insert {
GRAPH  <http://localhost:8890/mcas/activity#> {
  ?new a alzheimer:HavingAMeal;
    :hasSubActivity ?act1;
    :hasSubActivity ?act2;
    :time:hasBeginningTime ?bt1;
    :time:hasEndingTime ?et1;
    :hasActor ?user.

  ?act1 :isSubActivity ?new.
  ?act2 :isSubActivity ?new.
 }
  GRAPH  <http://localhost:8890/mcas/person#> {
    ?user :isInvolvedIn ?new.
  }
}

from <http://localhost:8890/mcas/person#>
from <http://localhost:8890/mcas/activity#>

where {
#?s ?o ?p.
 BIND ("2017-06-06"^^xsd:dateTime as ?day).

 ?act1 a <http://purl.org/m-context/ontologies/domains/alzheimer#Sit>;
  time:hasBeginningTime ?b1;
  time:hasEndingTime ?e1.

 BIND (xsd:dateTime(?b1) as ?bt1).
 BIND (xsd:dateTime(?e1) as ?et1).
 FILTER(month(?bt1) = month(?day))
  
 ?act2 a <http://purl.org/m-context/ontologies/domains/alzheimer#Eat>;
  time:hasBeginningTime ?b2;
  time:hasEndingTime ?e2.

  BIND (xsd:dateTime(?b2) as ?bt2).
  BIND (xsd:dateTime(?e2) as ?et2).
  
  FILTER (?bt1 < ?bt2 && ?et1 > ?et2).
  
 optional {
  ?act2 :hasActor ?user.
 }

BIND (URI(CONCAT(
str(activity:), 
STRAFTER(str(?act1), str(activity:))
,"_", 
STRAFTER(str(?act2), str(activity:))
)) as ?new).
#FILTER(NOT EXISTS {?new a [] .})  

}