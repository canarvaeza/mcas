@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix  rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix crml:       <http://semweb.mmlab.be/ns/crml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .

@prefix foaf: <http://xmlns.com/foaf/0.1/>.

@prefix mcontext: <http://www.semanticweb.org/ontologies/mcontext#>.
@prefix alzheimer: <http://www.semanticweb.org/ontologies/domains/alzheimer#>.
@prefix role: <http://www.semanticweb.org/ontologies/role#>.

## ------ SSN -------- ###
@prefix sosa: <http://www.w3.org/ns/sosa/> .


#COMO DEBERÍA PONERLO ENTONCES


<#PersonMapping>
	rml:logicalSource [
		rml:source "src/test/resources/propios/input.json";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Person.[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://mcas.com/Person/{Id}";
    	rr:class foaf:Person
    ];
    
    rr:predicateObjectMap [
    	rr:predicate foaf:firstname;
    	rr:objectMap
    	[
    		rml:reference "Name"
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate foaf:lastname;
    	rr:objectMap
    	[
    		rml:reference "Last-name"
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate mcontext:hasRol;
    	rr:objectMap
    	[
    		rr:parentTriplesMap <#RolMapping> ;
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate mcontext:use;
    	rr:objectMap
    	[
    		rr:template "http://mcas.com/{Device.Id}" ;
    	]
    ].
    

## ------- ROL ------

<#RolMapping>
	rml:logicalSource [
		rml:source "src/test/resources/propios/input.json";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Person.[*].Role"
    ];
    
    #define la uri en el sistema
    # COMO PONERLE LAS SUB CLASES? Tengo que modificar en la ontología y de convertir a clase definida diciendo que todo rol es rol (para que lo reconozca automáticamente
    rr:subjectMap [
    	rr:template "http://www.semanticweb.org/ontologies/domains/alzheimer#{Value}";
    	
    	#crml:booleanCondition[
    	#	crml:condition "FamiliarRole";
    	#	rr:class role:FamiliarRole
    	#];
    	
    	#rr:class role:Family
    ].

## ------ SSN ------ ###

<#DeviceMapping>
	rml:logicalSource [
		rml:source "src/test/resources/propios/input.json";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Ssn.[*].Device"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://mcas.com/Device/{Id}";
    	rr:class sosa:Platform
    ];
        
    rr:predicateObjectMap [
    	rr:predicate sosa:hosts;
    	rr:objectMap
    	[
    		rr:template "http://mcas.com/Device/{Sensor}";

			#rr:parentTriplesMap <#SensorMapping>;
] ] .

#    rr:predicateObjectMap [
#    	rr:predicate mcontext:describe;
#    	rr:objectMap
#    	[
#    		rr:parentTriplesMap <#ActivityMapping>
#    	]
#    ].

<#SensorMapping>

rml:logicalSource [
		rml:source "src/test/resources/propios/input.json";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Ssn.[*].Sensor"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://mcas.com/Sensor/{Id}";
    	rr:class sosa:Sensor
    ];
    
    ## UTILIZO TEMPLATE PARA QUE PUEDA PONERLO COMO UNA CLASE!
    
    rr:predicateObjectMap [
    	rr:predicate sosa:observes;
    	rr:objectMap
    	[
    		#rml:reference "Observe"
    		rr:template "http://mcas.com/{Observe}"
    	]
    ].


<#ObservationMapping>
    
    rml:logicalSource [
		rml:source "src/test/resources/propios/input.json";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Ssn.[*].Observation.[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://mcas.com/Observation/{Id}";
    	rr:class sosa:Observation
    ];
    
#    rr:predicateObjectMap [
#    	rr:predicate sosa:observedProperty;
#    	rr:objectMap
#    	[
#    		#rml:reference "Sensor.Observe"
#    		rr:template "http://mcas.com/{Observe}"
#    	]
#    ];
    
    rr:predicateObjectMap [
    	rr:predicate sosa:madeBySensor;
    	rr:objectMap
    	[
    		rr:template "http://mcas.com/{Sensor}"
    	]
    ];
    
    #VERIFICAR CÓMO TRATAR EL NÚMERO PORQUE NO ME SALE EL TIPO DE DATO
    
    rr:predicateObjectMap [
    	rr:predicate sosa:hasSimpleResult;
    	rr:objectMap
    	[
    		rml:reference "Value";
    		rr:datatype xsd:decimal
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate sosa:resultTime;
    	rr:objectMap
    	[
    		rml:reference "Time";
    		rr:datatype xsd:dateTime
    	]
    ].

