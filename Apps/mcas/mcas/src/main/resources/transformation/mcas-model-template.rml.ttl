@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix  rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix crml:       <http://semweb.mmlab.be/ns/crml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@base <http://example.com> .

## --------------- DEPENDENCIES ----------- ###

### ----- MCONTEXT ----- ###
@prefix mcontext: <http://purl.org/m-context/ontologies/mContext#>.
#@prefix alzheimer: <http://purl.org/m-context/ontologies/alzheimer#>.


### ------ SENSOR -------- ###
@prefix sosa: <http://www.w3.org/ns/sosa/>.

### ------ LOCATION -------- ###
@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
#@prefix schema: <http://schema.org/>.
@prefix gn: <http://www.geonames.org/ontology#>.
@prefix location: <http://purl.org/m-context/ontologies/location#> .

### ------ MULTIMEDIA -------- ###
@prefix multimedia: <http://purl.org/m-context/ontologies/multimedia#> .
@prefix ma: <http://www.w3.org/ns/ma-ont#>.

### ----- ACTIVITY ----- ###
@prefix activity: <http://purl.org/m-context/ontologies/activity#>.

### ----- TIME ----- ###
@prefix time: <http://purl.org/m-context/ontologies/time#>.

### ------ PERSON ------ ###
@prefix foaf: <http://xmlns.com/foaf/0.1/>.


## ------------------------------------------###


## --------------- MAPPINGS --------------- ##


### ----- ACTIVITY ----- ###

<#ActivityMapping>
    rml:logicalSource [
        rml:source "<*input_json_file*>";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$.Activity[*]"
    ];

    rr:subjectMap [
        rr:template "http://{Id}";
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap
        [
            rr:template "http://{Type}";
        ]
    ];
    
    ## ----- BASIC ATRIBUTES ----- ##
    
    rr:predicateObjectMap [
        rr:predicate time:hasBeginningTime;
        rr:objectMap
        [
            rml:reference "Time.Beginning";
            rr:datatype xsd:dateTime
        ]
    ],[
        rr:predicate time:hasEndingTime;
        rr:objectMap
        [
            rml:reference "Time.Ending";
            rr:datatype xsd:dateTime
        ]
    ];

    ## ----- EXTERNAL ATRIBUTES ----- ##

    rr:predicateObjectMap [
        rr:predicate mcontext:hasActor;
        rr:objectMap
        [
            rr:template "http://{Person[*].Id}";
        ]
    ],[
        rr:predicate mcontext:isDescribedBy;
        rr:objectMap
        [
            rr:template "http://{Descriptor[*].Id}";
        ]
    ].

## ------ SSN ------ ###
<#DeviceMapping>
	rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Ssn[*].Device[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://{Id}";
    	rr:class sosa:Platform
    ];

	## ----- EXTERNAL ATRIBUTES ----- ##

	rr:predicateObjectMap [
        rr:predicate sosa:hosts;
        rr:objectMap
        [
            rr:template "http://{Sensor[*]}";
        ]
    ];
	rr:predicateObjectMap [
        rr:predicate gn:locatedIn;
        rr:objectMap
        [
        
            rr:template "http://{Location}";            
        ] 
    ].

<#SensorMapping>
	rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Ssn[*].Sensor[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://{Id}";
    	rr:class sosa:Sensor
    ];
	    
    ## ----- BASIC ATRIBUTES ----- ##
    
    rr:predicateObjectMap [
        rr:predicate sosa:observes;
        rr:objectMap
        [
            rr:template "http://{Observe}";
        ]
    ];

	## ----- EXTERNAL ATRIBUTES ----- ##

	rr:predicateObjectMap [
        rr:predicate gn:locatedIn;
        rr:objectMap
        [
        
            rr:template "http://{Location}";            
        ] 
    ].

<#ObservationMapping>
    
    rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Ssn[*].Observation[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://{Id}";
    	rr:class sosa:Observation
    ];
    
    rr:predicateObjectMap [
    	rr:predicate sosa:madeBySensor;
    	rr:objectMap
    	[
    		rr:template "http://{Sensor}"
    	]
    ];
        
    rr:predicateObjectMap [
    	rr:predicate sosa:hasSimpleResult;
    	rr:objectMap
    	[
    		rml:reference "Value";
    		rr:datatype xsd:decimal
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate sosa:resultTime;
    	rr:objectMap
    	[
    		rml:reference "Time";
    		rr:datatype xsd:dateTime
    	]
    ];
    
    rr:predicateObjectMap [
	    rr:predicate mcontext:describe;
    	rr:objectMap
    	[
    		rr:template "http://{RecEntities[*].Activity}";
    	]
    ];

    rr:predicateObjectMap [
        rr:predicate gn:locatedIn;
        rr:objectMap
        [
        
            rr:template "http://{Location}";            
        ] 
    ].



### ----- MULTIMEDIA ----- ###

<#MultimediaMapping>
	rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Multimedia[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://{Id}";
    ];
 
     ## ----- BASIC ATRIB ----- ##       
        
    rr:predicateObjectMap [
    	rr:predicate rdf:type;
    	rr:objectMap
    	[
    		rr:template "http://{Type}";
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate ma:hasFormat;
    	rr:objectMap
    	[
    		rr:template "http://{Format}";

			#rr:parentTriplesMap <#SensorMapping>;
		] 
	],[
    	rr:predicate multimedia:creationDate;
    	rr:objectMap
    	[
    		rml:reference "CreationTime";
    		rr:datatype xsd:dateTime
    	]
    ],[
    	rr:predicate ma:hasMultimediaDescriptor;
    	rr:objectMap
    	[
    		rr:parentTriplesMap <#DescriptorMapping>;
    	]
    ];
    
    ## ----- EXTERNAL ATRIB ----- ##
    
    rr:predicateObjectMap [
	    rr:predicate mcontext:describe;
    	rr:objectMap
    	[
    		rr:template "http://{RecEntities[*].Activity}";
    	]
    ],[
    	rr:predicate gn:locatedIn;
    	rr:objectMap
    	[
    		rr:template "http://{Location}";			
		] 
	].
    
    
<#DescriptorMapping>
	rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Multimedia[*].Descriptor"
	];

	rr:subjectMap [ 
	  rr:template "http://{Id}"
	];
	
	rr:predicateObjectMap [ 
		rr:predicate multimedia:descriptionText;
		rr:objectMap
		[
			rml:reference "Content";
			rr:datatype xsd:string;
		] 
	].




### ----- LOCATION ----- ###
<#LocationMapping>
	rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Location[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://{Id}";
    ];
    
    rr:predicateObjectMap [
    	rr:predicate rdf:type;
    	rr:objectMap
    	[
    		rr:template "http://{Type}";
    	]
    ];
        
	rr:predicateObjectMap 
  		[
		rr:predicate wgs84_pos:lat;
		rr:objectMap 
    	[
      		rml:reference "Coordinates.latitude" 
    	]
  	], [
    	rr:predicate wgs84_pos:long;
    	rr:objectMap 
    	[
      	rml:reference "Coordinates.longitude" 
    	]
  	].

### ------ PERSON ------ ###

<#PersonMapping>
	rml:logicalSource [
		rml:source "<*input_json_file*>";
	    rml:referenceFormulation ql:JSONPath;
	    rml:iterator "$.Person[*]"
    ];
    
    #define la uri en el sistema
    rr:subjectMap [
    	rr:template "http://{Id}";
    	rr:class foaf:Person
    ];
    
    
    ## ----- BASIC ATRIBUTES ----- ##
    
    rr:predicateObjectMap [
    	rr:predicate foaf:firstname;
    	rr:objectMap
    	[
    		rml:reference "Name"
    	]
    ];
    
    rr:predicateObjectMap [
    	rr:predicate foaf:lastname;
    	rr:objectMap
    	[
    		rml:reference "Last-name"
    	]
    ];
    
    ## ----- EXTERNAL ATRIBUTES ----- ##
    
    rr:predicateObjectMap [
    	rr:predicate mcontext:hasRol;
    	rr:objectMap
    	[
    		rr:template "http://{Role.Value}" ;
    	]
    ].